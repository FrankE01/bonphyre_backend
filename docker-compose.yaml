services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bonphyre_backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - test_db
    volumes:
      - ./app:/app
    networks:
      - bonphyre_network

  db:
    image: postgres:15
    container_name: postgres_db
    command: -p 5432
    restart: unless-stopped
    environment:
      PGUSER: ${POSTGRES_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-bonphyre}
      PGDATA: /data/postgresql
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bonphyre_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  test_db:
    image: postgres:15
    container_name: postgres_test_db
    command: -p 5432
    restart: unless-stopped
    environment:
      PGUSER: ${POSTGRES_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-bonphyre_test}
      PGDATA: /data/postgresql
    ports:
      - "5432:5432"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    networks:
      - bonphyre_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  test_postgres_data:

networks:
  bonphyre_network:
    driver: bridge
